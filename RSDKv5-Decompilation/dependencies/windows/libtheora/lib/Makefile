# Makefile.in generated by automake 1.11.1 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/libtheora
pkgincludedir = $(includedir)/libtheora
pkglibdir = $(libdir)/libtheora
pkglibexecdir = $(libexecdir)/libtheora
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-w64-mingw32
host_triplet = x86_64-w64-mingw32
target_triplet = x86_64-w64-mingw32
subdir = lib
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-ac-expand.m4 \
	$(top_srcdir)/m4/as-gcc-inline-assembly.m4 \
	$(top_srcdir)/m4/ogg.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/m4/vorbis.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libtheora_la_LIBADD =
am__libtheora_la_SOURCES_DIST = apiwrapper.c bitpack.c decapiwrapper.c \
	decinfo.c decode.c dequant.c fragment.c huffdec.c idct.c \
	info.c internal.c quant.c state.c c64x/c64xdec.c \
	c64x/c64xfrag.c c64x/c64xidct.c c64x/c64xstate.c arm/armcpu.c \
	arm/armstate.c x86/x86cpu.c x86/mmxidct.c x86/mmxfrag.c \
	x86/mmxstate.c x86/sse2idct.c x86/x86state.c analyze.c fdct.c \
	encfrag.c encapiwrapper.c encinfo.c encode.c enquant.c \
	huffenc.c mathops.c mcenc.c rate.c tokenize.c x86/mmxencfrag.c \
	x86/mmxfdct.c x86/sse2encfrag.c x86/x86enquant.c x86/x86enc.c \
	x86/sse2fdct.c encoder_disabled.c Version_script theora.exp
am__objects_1 = c64xdec.lo c64xfrag.lo c64xidct.lo c64xstate.lo
am__objects_2 = armcpu.lo armstate.lo
am__objects_3 = x86cpu.lo mmxidct.lo mmxfrag.lo mmxstate.lo \
	sse2idct.lo x86state.lo
#am__objects_4 = $(am__objects_1)
#am__objects_4 = $(am__objects_2)
#am__objects_4 = $(am__objects_3)
#am__objects_4 = $(am__objects_3)
am__objects_5 = apiwrapper.lo bitpack.lo decapiwrapper.lo decinfo.lo \
	decode.lo dequant.lo fragment.lo huffdec.lo idct.lo info.lo \
	internal.lo quant.lo state.lo $(am__objects_4)
am__objects_6 =
#am__objects_7 = mmxencfrag.lo mmxfdct.lo \
#	sse2encfrag.lo x86enquant.lo \
#	x86enc.lo
#am__objects_8 = sse2fdct.lo
##am__objects_9 = $(am__objects_6)
##am__objects_9 = $(am__objects_7)
##am__objects_9 = $(am__objects_7) \
##	$(am__objects_8)
#am__objects_10 = analyze.lo fdct.lo \
#	encfrag.lo encapiwrapper.lo \
#	encinfo.lo encode.lo enquant.lo \
#	huffenc.lo mathops.lo mcenc.lo \
#	rate.lo tokenize.lo \
#	$(am__objects_9)
am__objects_10 = encoder_disabled.lo
am_libtheora_la_OBJECTS = $(am__objects_5) $(am__objects_10)
am__objects_11 = armbits-gnu.lo armfrag-gnu.lo armidct-gnu.lo \
	armloop-gnu.lo armopts-gnu.lo
#am__objects_12 = $(am__objects_11)
nodist_libtheora_la_OBJECTS = $(am__objects_12)
libtheora_la_OBJECTS = $(am_libtheora_la_OBJECTS) \
	$(nodist_libtheora_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libtheora_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libtheora_la_LDFLAGS) $(LDFLAGS) -o $@
libtheoradec_la_LIBADD =
am__libtheoradec_la_SOURCES_DIST = apiwrapper.c bitpack.c \
	decapiwrapper.c decinfo.c decode.c dequant.c fragment.c \
	huffdec.c idct.c info.c internal.c quant.c state.c \
	c64x/c64xdec.c c64x/c64xfrag.c c64x/c64xidct.c \
	c64x/c64xstate.c arm/armcpu.c arm/armstate.c x86/x86cpu.c \
	x86/mmxidct.c x86/mmxfrag.c x86/mmxstate.c x86/sse2idct.c \
	x86/x86state.c Version_script-dec theoradec.exp
am_libtheoradec_la_OBJECTS = $(am__objects_5)
nodist_libtheoradec_la_OBJECTS = $(am__objects_12)
libtheoradec_la_OBJECTS = $(am_libtheoradec_la_OBJECTS) \
	$(nodist_libtheoradec_la_OBJECTS)
libtheoradec_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libtheoradec_la_LDFLAGS) $(LDFLAGS) \
	-o $@
libtheoraenc_la_DEPENDENCIES = libtheoradec.la
am__libtheoraenc_la_SOURCES_DIST = apiwrapper.c bitpack.c dequant.c \
	fragment.c idct.c internal.c state.c quant.c armbits-gnu.S \
	armfrag-gnu.S armidct-gnu.S armloop-gnu.S armopts-gnu.S \
	arm/armcpu.c arm/armstate.c x86/x86cpu.c x86/mmxfrag.c \
	x86/mmxidct.c x86/mmxstate.c x86/sse2idct.c x86/x86state.c \
	analyze.c fdct.c encfrag.c encapiwrapper.c encinfo.c encode.c \
	enquant.c huffenc.c mathops.c mcenc.c rate.c tokenize.c \
	x86/mmxencfrag.c x86/mmxfdct.c x86/sse2encfrag.c \
	x86/x86enquant.c x86/x86enc.c x86/sse2fdct.c \
	encoder_disabled.c Version_script-enc theoraenc.exp
#am__objects_13 = armbits-gnu.lo \
#	armfrag-gnu.lo armidct-gnu.lo \
#	armloop-gnu.lo armopts-gnu.lo \
#	armcpu.lo armstate.lo
#am__objects_14 = x86cpu.lo mmxfrag.lo \
#	mmxidct.lo mmxstate.lo \
#	sse2idct.lo x86state.lo
##am__objects_15 = $(am__objects_13)
##am__objects_15 = $(am__objects_14)
##am__objects_15 = $(am__objects_14) \
##	$(am__objects_6)
#am__objects_16 = apiwrapper.lo bitpack.lo \
#	dequant.lo fragment.lo idct.lo \
#	internal.lo state.lo quant.lo \
#	$(am__objects_15) \
#	$(am__objects_10)
am__objects_16 = $(am__objects_10)
am_libtheoraenc_la_OBJECTS = $(am__objects_16)
libtheoraenc_la_OBJECTS = $(am_libtheoraenc_la_OBJECTS)
libtheoraenc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libtheoraenc_la_LDFLAGS) $(LDFLAGS) \
	-o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libtheora_la_SOURCES) $(nodist_libtheora_la_SOURCES) \
	$(libtheoradec_la_SOURCES) $(nodist_libtheoradec_la_SOURCES) \
	$(libtheoraenc_la_SOURCES)
DIST_SOURCES = $(am__libtheora_la_SOURCES_DIST) \
	$(am__libtheoradec_la_SOURCES_DIST) \
	$(am__libtheoraenc_la_SOURCES_DIST)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = -I m4
AMTAR = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/missing --run automake-1.11
AWK = mawk
BINDIR = 
BUILDABLE_EXAMPLES = 
CAIRO_CFLAGS = 
CAIRO_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-parentheses -O3 -fforce-addr -fomit-frame-pointer -finline-functions -funroll-loops -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEBUG = -g -Wall -Wno-parentheses -DDEBUG -D__NO_MATH_INLINES
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOCDIR = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GETOPT_OBJS = 
GREP = /usr/bin/grep
HAVE_ARM_ASM_EDSP = 
HAVE_ARM_ASM_MEDIA = 
HAVE_ARM_ASM_NEON = 
HAVE_BIBTEX = 
HAVE_DOXYGEN = false
HAVE_PDFLATEX = 
HAVE_PERL = 
HAVE_PKG_CONFIG = yes
HAVE_TRANSFIG = 
HAVE_VALGRIND = 
INCLUDEDIR = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBDIR = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OGG_CFLAGS = -I/usr/local/include
OGG_LIBS = -L/usr/local/lib -logg
OSS_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = libtheora
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libtheora
PACKAGE_STRING = libtheora 1.2.0alpha1
PACKAGE_TARNAME = libtheora
PACKAGE_VERSION = 1.2.0alpha1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PNG_CFLAGS = 
PNG_LIBS = 
PROFILE = -Wall -Wno-parentheses -pg -g -O3 -fno-inline-functions -DDEBUG
RANLIB = ranlib
SDL_CFLAGS = 
SDL_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
THDEC_LIB_AGE = 1
THDEC_LIB_CURRENT = 2
THDEC_LIB_REVISION = 5
THENC_LIB_AGE = 2
THENC_LIB_CURRENT = 3
THENC_LIB_REVISION = 0
THEORADEC_LDFLAGS =  -no-undefined -export-symbols $(top_srcdir)/win32/xmingw32/libtheoradec-all.def
THEORAENC_LDFLAGS =  -no-undefined -export-symbols $(top_srcdir)/win32/xmingw32/libtheoraenc-all.def -ltheoradec
THEORA_LDFLAGS =  -no-undefined 
TH_LIB_AGE = 4
TH_LIB_CURRENT = 4
TH_LIB_REVISION = 0
VALGRIND_ENVIRONMENT = 
VERSION = 1.2.0alpha1
VORBISENC_LIBS = -lvorbisenc
VORBISFILE_LIBS = 
VORBIS_CFLAGS = -I/usr/local/include
VORBIS_LIBS = -L/usr/local/lib -lvorbis
abs_builddir = /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/lib
abs_srcdir = /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/lib
abs_top_builddir = /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora
abs_top_srcdir = /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-w64-mingw32
build_alias = x86_64-w64-mingw32
build_cpu = x86_64
build_os = mingw32
build_vendor = w64
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-w64-mingw32
host_alias = 
host_cpu = x86_64
host_os = mingw32
host_vendor = w64
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tide/Desktop/RSDKv5-Decompilation/dependencies/windows/libtheora/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-w64-mingw32
target_alias = 
target_cpu = x86_64
target_os = mingw32
target_vendor = w64
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = -I$(top_srcdir)/include
AM_CFLAGS = $(OGG_CFLAGS) $(CAIRO_CFLAGS)
EXTRA_DIST = \
	encoder_disabled.c \
	arm/armcpu.c \
	arm/armbits.h \
	arm/armbits.s \
	arm/armfrag.s \
	arm/armidct.s \
	arm/armint.h \
	arm/armopts.s.in \
	arm/arm2gnu.pl \
	c64x/c64xint.h \
	c64x/c64xdec.h \
	x86/x86cpu.c \
	x86/mmxencfrag.c \
	x86/mmxfdct.c \
	x86/sse2encfrag.c \
	x86/sse2fdct.c \
	x86/sse2trans.h \
	x86/x86enc.c \
	x86/x86enc.h \
	x86/x86enquant.c \
	x86/mmxfrag.c \
	x86/mmxidct.c \
	x86/mmxloop.h \
	x86/mmxstate.c \
	x86/sse2idct.c \
	x86/x86int.h \
	x86/x86state.c \
	x86_vc

lib_LTLIBRARIES = libtheoradec.la libtheoraenc.la libtheora.la
#encoder_uniq_sources = \
#	analyze.c \
#	fdct.c \
#	encfrag.c \
#	encapiwrapper.c \
#	encinfo.c \
#	encode.c \
#	enquant.c \
#	huffenc.c \
#	mathops.c \
#	mcenc.c \
#	rate.c \
#	tokenize.c \
#	$(encoder_uniq_arch_sources)

encoder_uniq_sources = \
	encoder_disabled.c

#encoder_sources = \
#	apiwrapper.c \
#	bitpack.c \
#	dequant.c \
#	fragment.c \
#	idct.c \
#	internal.c \
#	state.c \
#	quant.c \
#	$(encoder_shared_arch_sources) \
#	$(encoder_uniq_sources)

encoder_sources = \
	$(encoder_uniq_sources)

#encoder_uniq_x86_sources = \
#	x86/mmxencfrag.c \
#	x86/mmxfdct.c \
#	x86/sse2encfrag.c \
#	x86/x86enquant.c \
#	x86/x86enc.c

#encoder_uniq_x86_64_sources = \
#	x86/sse2fdct.c

#encoder_shared_x86_sources = \
#	x86/x86cpu.c \
#	x86/mmxfrag.c \
#	x86/mmxidct.c \
#	x86/mmxstate.c \
#	x86/sse2idct.c \
#	x86/x86state.c

#encoder_shared_x86_64_sources = 
#encoder_uniq_arm_sources = 
##BUILT_SOURCES = \
##	armbits-gnu.S \
##	armfrag-gnu.S \
##	armidct-gnu.S \
##	armloop-gnu.S \
##	armopts-gnu.S

#encoder_shared_arm_sources = \
#	armbits-gnu.S \
#	armfrag-gnu.S \
#	armidct-gnu.S \
#	armloop-gnu.S \
#	armopts-gnu.S \
#	arm/armcpu.c \
#	arm/armstate.c

#encoder_uniq_arch_sources = 
##encoder_uniq_arch_sources = $(encoder_uniq_arm_sources)
##encoder_uniq_arch_sources = $(encoder_uniq_x86_sources)
##encoder_uniq_arch_sources = \
## $(encoder_uniq_x86_sources) \
## $(encoder_uniq_x86_64_sources)

#encoder_shared_arch_sources = 
##encoder_shared_arch_sources = $(encoder_shared_arm_sources)
##encoder_shared_arch_sources = $(encoder_shared_x86_sources)
##encoder_shared_arch_sources = \
## $(encoder_shared_x86_sources) \
## $(encoder_shared_x86_64_sources)

decoder_x86_sources = \
	x86/x86cpu.c \
	x86/mmxidct.c \
	x86/mmxfrag.c \
	x86/mmxstate.c \
	x86/sse2idct.c \
	x86/x86state.c

decoder_arm_sources = \
	arm/armcpu.c \
	arm/armstate.c

nodist_decoder_arm_sources = \
	armbits-gnu.S \
	armfrag-gnu.S \
	armidct-gnu.S \
	armloop-gnu.S \
	armopts-gnu.S

decoder_c64x_sources = \
	c64x/c64xdec.c \
	c64x/c64xfrag.c \
	c64x/c64xidct.c \
	c64x/c64xstate.c

decoder_arch_sources = 
#decoder_arch_sources = $(decoder_c64x_sources)
#decoder_arch_sources = $(decoder_arm_sources)
#decoder_arch_sources = $(decoder_x86_sources)
#decoder_arch_sources = $(decoder_x86_sources)
nodist_decoder_arch_sources = 
#nodist_decoder_arch_sources = 
#nodist_decoder_arch_sources = $(nodist_decoder_arm_sources)
#nodist_decoder_arch_sources = 
#nodist_decoder_arch_sources = 
decoder_sources = \
	apiwrapper.c \
	bitpack.c \
	decapiwrapper.c \
	decinfo.c \
	decode.c \
	dequant.c \
	fragment.c \
	huffdec.c \
	idct.c \
	info.c \
	internal.c \
	quant.c \
	state.c \
	$(decoder_arch_sources)

noinst_HEADERS = \
	apiwrapper.h \
	bitpack.h \
	dct.h \
	decint.h \
	dequant.h \
	encint.h \
	enquant.h \
	huffdec.h \
	huffenc.h \
	huffman.h \
	internal.h \
	mathops.h \
	modedec.h \
	ocintrin.h \
	quant.h \
	state.h \
	arm/armcpu.h \
	c64x/c64xdec.h \
	c64x/c64xint.h \
	x86/x86cpu.h \
	x86/mmxloop.h \
	x86/sse2trans.h \
	x86/x86enc.h \
	x86/x86int.h

libtheoradec_la_SOURCES = \
	$(decoder_sources) \
	Version_script-dec theoradec.exp

nodist_libtheoradec_la_SOURCES = \
	$(nodist_decoder_arch_sources)

libtheoradec_la_LDFLAGS = \
  -version-info 2:5:1 \
   -no-undefined -export-symbols $(top_srcdir)/win32/xmingw32/libtheoradec-all.def  \
  -no-undefined

libtheoraenc_la_SOURCES = \
	$(encoder_sources) \
	Version_script-enc theoraenc.exp

libtheoraenc_la_LDFLAGS = \
  -version-info 3:0:2 \
   -no-undefined -export-symbols $(top_srcdir)/win32/xmingw32/libtheoraenc-all.def -ltheoradec $(OGG_LIBS) \
  -no-undefined

libtheoraenc_la_LIBADD = libtheoradec.la
libtheora_la_SOURCES = \
	$(decoder_sources) \
	$(encoder_uniq_sources) \
	Version_script theora.exp

nodist_libtheora_la_SOURCES = \
	$(nodist_decoder_arch_sources)

libtheora_la_LDFLAGS = \
  -version-info 4:0:4 \
   -no-undefined   $(OGG_LIBS) \
  -no-undefined

CLEANFILES = \
	armbits-gnu.S \
	armfrag-gnu.S \
	armidct-gnu.S \
	armloop-gnu.S \
	armopts-gnu.S

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .S .c .def .exp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libtheora.la: $(libtheora_la_OBJECTS) $(libtheora_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libtheora_la_LINK) -rpath $(libdir) $(libtheora_la_OBJECTS) $(libtheora_la_LIBADD) $(LIBS)
libtheoradec.la: $(libtheoradec_la_OBJECTS) $(libtheoradec_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libtheoradec_la_LINK) -rpath $(libdir) $(libtheoradec_la_OBJECTS) $(libtheoradec_la_LIBADD) $(LIBS)
libtheoraenc.la: $(libtheoraenc_la_OBJECTS) $(libtheoraenc_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libtheoraenc_la_LINK) -rpath $(libdir) $(libtheoraenc_la_OBJECTS) $(libtheoraenc_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/analyze.Plo
include ./$(DEPDIR)/apiwrapper.Plo
include ./$(DEPDIR)/armbits-gnu.Plo
include ./$(DEPDIR)/armcpu.Plo
include ./$(DEPDIR)/armfrag-gnu.Plo
include ./$(DEPDIR)/armidct-gnu.Plo
include ./$(DEPDIR)/armloop-gnu.Plo
include ./$(DEPDIR)/armopts-gnu.Plo
include ./$(DEPDIR)/armstate.Plo
include ./$(DEPDIR)/bitpack.Plo
include ./$(DEPDIR)/c64xdec.Plo
include ./$(DEPDIR)/c64xfrag.Plo
include ./$(DEPDIR)/c64xidct.Plo
include ./$(DEPDIR)/c64xstate.Plo
include ./$(DEPDIR)/decapiwrapper.Plo
include ./$(DEPDIR)/decinfo.Plo
include ./$(DEPDIR)/decode.Plo
include ./$(DEPDIR)/dequant.Plo
include ./$(DEPDIR)/encapiwrapper.Plo
include ./$(DEPDIR)/encfrag.Plo
include ./$(DEPDIR)/encinfo.Plo
include ./$(DEPDIR)/encode.Plo
include ./$(DEPDIR)/encoder_disabled.Plo
include ./$(DEPDIR)/enquant.Plo
include ./$(DEPDIR)/fdct.Plo
include ./$(DEPDIR)/fragment.Plo
include ./$(DEPDIR)/huffdec.Plo
include ./$(DEPDIR)/huffenc.Plo
include ./$(DEPDIR)/idct.Plo
include ./$(DEPDIR)/info.Plo
include ./$(DEPDIR)/internal.Plo
include ./$(DEPDIR)/mathops.Plo
include ./$(DEPDIR)/mcenc.Plo
include ./$(DEPDIR)/mmxencfrag.Plo
include ./$(DEPDIR)/mmxfdct.Plo
include ./$(DEPDIR)/mmxfrag.Plo
include ./$(DEPDIR)/mmxidct.Plo
include ./$(DEPDIR)/mmxstate.Plo
include ./$(DEPDIR)/quant.Plo
include ./$(DEPDIR)/rate.Plo
include ./$(DEPDIR)/sse2encfrag.Plo
include ./$(DEPDIR)/sse2fdct.Plo
include ./$(DEPDIR)/sse2idct.Plo
include ./$(DEPDIR)/state.Plo
include ./$(DEPDIR)/tokenize.Plo
include ./$(DEPDIR)/x86cpu.Plo
include ./$(DEPDIR)/x86enc.Plo
include ./$(DEPDIR)/x86enquant.Plo
include ./$(DEPDIR)/x86state.Plo

.S.o:
	$(AM_V_CPPAS)$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CPPAS) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CPPAS) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(AM_V_CPPAS)$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CPPAS) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(LTCPPASCOMPILE) -c -o $@ $<

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

c64xdec.lo: c64x/c64xdec.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c64xdec.lo -MD -MP -MF $(DEPDIR)/c64xdec.Tpo -c -o c64xdec.lo `test -f 'c64x/c64xdec.c' || echo '$(srcdir)/'`c64x/c64xdec.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c64xdec.Tpo $(DEPDIR)/c64xdec.Plo
#	$(AM_V_CC) \
#	source='c64x/c64xdec.c' object='c64xdec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c64xdec.lo `test -f 'c64x/c64xdec.c' || echo '$(srcdir)/'`c64x/c64xdec.c

c64xfrag.lo: c64x/c64xfrag.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c64xfrag.lo -MD -MP -MF $(DEPDIR)/c64xfrag.Tpo -c -o c64xfrag.lo `test -f 'c64x/c64xfrag.c' || echo '$(srcdir)/'`c64x/c64xfrag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c64xfrag.Tpo $(DEPDIR)/c64xfrag.Plo
#	$(AM_V_CC) \
#	source='c64x/c64xfrag.c' object='c64xfrag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c64xfrag.lo `test -f 'c64x/c64xfrag.c' || echo '$(srcdir)/'`c64x/c64xfrag.c

c64xidct.lo: c64x/c64xidct.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c64xidct.lo -MD -MP -MF $(DEPDIR)/c64xidct.Tpo -c -o c64xidct.lo `test -f 'c64x/c64xidct.c' || echo '$(srcdir)/'`c64x/c64xidct.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c64xidct.Tpo $(DEPDIR)/c64xidct.Plo
#	$(AM_V_CC) \
#	source='c64x/c64xidct.c' object='c64xidct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c64xidct.lo `test -f 'c64x/c64xidct.c' || echo '$(srcdir)/'`c64x/c64xidct.c

c64xstate.lo: c64x/c64xstate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT c64xstate.lo -MD -MP -MF $(DEPDIR)/c64xstate.Tpo -c -o c64xstate.lo `test -f 'c64x/c64xstate.c' || echo '$(srcdir)/'`c64x/c64xstate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/c64xstate.Tpo $(DEPDIR)/c64xstate.Plo
#	$(AM_V_CC) \
#	source='c64x/c64xstate.c' object='c64xstate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o c64xstate.lo `test -f 'c64x/c64xstate.c' || echo '$(srcdir)/'`c64x/c64xstate.c

armcpu.lo: arm/armcpu.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armcpu.lo -MD -MP -MF $(DEPDIR)/armcpu.Tpo -c -o armcpu.lo `test -f 'arm/armcpu.c' || echo '$(srcdir)/'`arm/armcpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/armcpu.Tpo $(DEPDIR)/armcpu.Plo
#	$(AM_V_CC) \
#	source='arm/armcpu.c' object='armcpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armcpu.lo `test -f 'arm/armcpu.c' || echo '$(srcdir)/'`arm/armcpu.c

armstate.lo: arm/armstate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT armstate.lo -MD -MP -MF $(DEPDIR)/armstate.Tpo -c -o armstate.lo `test -f 'arm/armstate.c' || echo '$(srcdir)/'`arm/armstate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/armstate.Tpo $(DEPDIR)/armstate.Plo
#	$(AM_V_CC) \
#	source='arm/armstate.c' object='armstate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o armstate.lo `test -f 'arm/armstate.c' || echo '$(srcdir)/'`arm/armstate.c

x86cpu.lo: x86/x86cpu.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x86cpu.lo -MD -MP -MF $(DEPDIR)/x86cpu.Tpo -c -o x86cpu.lo `test -f 'x86/x86cpu.c' || echo '$(srcdir)/'`x86/x86cpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/x86cpu.Tpo $(DEPDIR)/x86cpu.Plo
#	$(AM_V_CC) \
#	source='x86/x86cpu.c' object='x86cpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86cpu.lo `test -f 'x86/x86cpu.c' || echo '$(srcdir)/'`x86/x86cpu.c

mmxidct.lo: x86/mmxidct.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmxidct.lo -MD -MP -MF $(DEPDIR)/mmxidct.Tpo -c -o mmxidct.lo `test -f 'x86/mmxidct.c' || echo '$(srcdir)/'`x86/mmxidct.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmxidct.Tpo $(DEPDIR)/mmxidct.Plo
#	$(AM_V_CC) \
#	source='x86/mmxidct.c' object='mmxidct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxidct.lo `test -f 'x86/mmxidct.c' || echo '$(srcdir)/'`x86/mmxidct.c

mmxfrag.lo: x86/mmxfrag.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmxfrag.lo -MD -MP -MF $(DEPDIR)/mmxfrag.Tpo -c -o mmxfrag.lo `test -f 'x86/mmxfrag.c' || echo '$(srcdir)/'`x86/mmxfrag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmxfrag.Tpo $(DEPDIR)/mmxfrag.Plo
#	$(AM_V_CC) \
#	source='x86/mmxfrag.c' object='mmxfrag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfrag.lo `test -f 'x86/mmxfrag.c' || echo '$(srcdir)/'`x86/mmxfrag.c

mmxstate.lo: x86/mmxstate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmxstate.lo -MD -MP -MF $(DEPDIR)/mmxstate.Tpo -c -o mmxstate.lo `test -f 'x86/mmxstate.c' || echo '$(srcdir)/'`x86/mmxstate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmxstate.Tpo $(DEPDIR)/mmxstate.Plo
#	$(AM_V_CC) \
#	source='x86/mmxstate.c' object='mmxstate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxstate.lo `test -f 'x86/mmxstate.c' || echo '$(srcdir)/'`x86/mmxstate.c

sse2idct.lo: x86/sse2idct.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sse2idct.lo -MD -MP -MF $(DEPDIR)/sse2idct.Tpo -c -o sse2idct.lo `test -f 'x86/sse2idct.c' || echo '$(srcdir)/'`x86/sse2idct.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sse2idct.Tpo $(DEPDIR)/sse2idct.Plo
#	$(AM_V_CC) \
#	source='x86/sse2idct.c' object='sse2idct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sse2idct.lo `test -f 'x86/sse2idct.c' || echo '$(srcdir)/'`x86/sse2idct.c

x86state.lo: x86/x86state.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x86state.lo -MD -MP -MF $(DEPDIR)/x86state.Tpo -c -o x86state.lo `test -f 'x86/x86state.c' || echo '$(srcdir)/'`x86/x86state.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/x86state.Tpo $(DEPDIR)/x86state.Plo
#	$(AM_V_CC) \
#	source='x86/x86state.c' object='x86state.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86state.lo `test -f 'x86/x86state.c' || echo '$(srcdir)/'`x86/x86state.c

mmxencfrag.lo: x86/mmxencfrag.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmxencfrag.lo -MD -MP -MF $(DEPDIR)/mmxencfrag.Tpo -c -o mmxencfrag.lo `test -f 'x86/mmxencfrag.c' || echo '$(srcdir)/'`x86/mmxencfrag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmxencfrag.Tpo $(DEPDIR)/mmxencfrag.Plo
#	$(AM_V_CC) \
#	source='x86/mmxencfrag.c' object='mmxencfrag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxencfrag.lo `test -f 'x86/mmxencfrag.c' || echo '$(srcdir)/'`x86/mmxencfrag.c

mmxfdct.lo: x86/mmxfdct.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmxfdct.lo -MD -MP -MF $(DEPDIR)/mmxfdct.Tpo -c -o mmxfdct.lo `test -f 'x86/mmxfdct.c' || echo '$(srcdir)/'`x86/mmxfdct.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmxfdct.Tpo $(DEPDIR)/mmxfdct.Plo
#	$(AM_V_CC) \
#	source='x86/mmxfdct.c' object='mmxfdct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfdct.lo `test -f 'x86/mmxfdct.c' || echo '$(srcdir)/'`x86/mmxfdct.c

sse2encfrag.lo: x86/sse2encfrag.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sse2encfrag.lo -MD -MP -MF $(DEPDIR)/sse2encfrag.Tpo -c -o sse2encfrag.lo `test -f 'x86/sse2encfrag.c' || echo '$(srcdir)/'`x86/sse2encfrag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sse2encfrag.Tpo $(DEPDIR)/sse2encfrag.Plo
#	$(AM_V_CC) \
#	source='x86/sse2encfrag.c' object='sse2encfrag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sse2encfrag.lo `test -f 'x86/sse2encfrag.c' || echo '$(srcdir)/'`x86/sse2encfrag.c

x86enquant.lo: x86/x86enquant.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x86enquant.lo -MD -MP -MF $(DEPDIR)/x86enquant.Tpo -c -o x86enquant.lo `test -f 'x86/x86enquant.c' || echo '$(srcdir)/'`x86/x86enquant.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/x86enquant.Tpo $(DEPDIR)/x86enquant.Plo
#	$(AM_V_CC) \
#	source='x86/x86enquant.c' object='x86enquant.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86enquant.lo `test -f 'x86/x86enquant.c' || echo '$(srcdir)/'`x86/x86enquant.c

x86enc.lo: x86/x86enc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x86enc.lo -MD -MP -MF $(DEPDIR)/x86enc.Tpo -c -o x86enc.lo `test -f 'x86/x86enc.c' || echo '$(srcdir)/'`x86/x86enc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/x86enc.Tpo $(DEPDIR)/x86enc.Plo
#	$(AM_V_CC) \
#	source='x86/x86enc.c' object='x86enc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86enc.lo `test -f 'x86/x86enc.c' || echo '$(srcdir)/'`x86/x86enc.c

sse2fdct.lo: x86/sse2fdct.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sse2fdct.lo -MD -MP -MF $(DEPDIR)/sse2fdct.Tpo -c -o sse2fdct.lo `test -f 'x86/sse2fdct.c' || echo '$(srcdir)/'`x86/sse2fdct.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sse2fdct.Tpo $(DEPDIR)/sse2fdct.Plo
#	$(AM_V_CC) \
#	source='x86/sse2fdct.c' object='sse2fdct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sse2fdct.lo `test -f 'x86/sse2fdct.c' || echo '$(srcdir)/'`x86/sse2fdct.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES


debug:
	$(MAKE) all CFLAGS="-g -Wall -Wno-parentheses -DDEBUG -D__NO_MATH_INLINES" 

profile:
	$(MAKE) all CFLAGS="-Wall -Wno-parentheses -pg -g -O3 -fno-inline-functions -DDEBUG"

# contstruct various symbol export list files
.def.exp : defexp.awk
	awk -f defexp.awk $< > $@

# automake doesn't do dependency tracking for asm files, that I can tell
armfrag-gnu.S: armopts-gnu.S
armidct-gnu.S: armopts-gnu.S
armloop-gnu.S: armopts-gnu.S

# convert ARM asm to GNU as format
%-gnu.S: $(srcdir)/arm/%.s
	$(srcdir)/arm/arm2gnu.pl < $< > $@
# Special case for armopts.s, because it is built by configure
armopts-gnu.S: arm/armopts.s
	$(srcdir)/arm/arm2gnu.pl < $< > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
